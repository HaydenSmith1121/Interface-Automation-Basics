{
  "uid" : "6eba317fcab12acc",
  "name" : "test_sea_file_1_5[8ac00e05a7652b31598a56d764bd5b5f7c45a6e-ef23029e-eec3-4f87-851a-db54e66b9770-1-200-token]",
  "fullName" : "test_case.test_07#test_sea_file_1_5",
  "historyId" : "24526560e4a7b9d815af46e176fb7e2c",
  "time" : {
    "start" : 1749818208114,
    "stop" : 1749818208122,
    "duration" : 8
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
  "statusTrace" : "token = '8ac00e05a7652b31598a56d764bd5b5f7c45a6e'\nrepo_id = 'ef23029e-eec3-4f87-851a-db54e66b9770', repo_name = '1', code = '200'\nmsg = 'token'\n\n    @pytest.mark.parametrize([\"token\", \"repo_id\", \"repo_name\", \"code\", \"msg\"], get_csv_data(\"./data/05seafile.csv\"))\n    def test_sea_file_1_5(token, repo_id, repo_name, code, msg):\n        response = sea_file_1_5(token, repo_id, repo_name)\n        a = eval(code)\n>       assert response.status_code == a\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_case\\test_07.py:54: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code",
    "statusTrace" : "token = '8ac00e05a7652b31598a56d764bd5b5f7c45a6e'\nrepo_id = 'ef23029e-eec3-4f87-851a-db54e66b9770', repo_name = '1', code = '200'\nmsg = 'token'\n\n    @pytest.mark.parametrize([\"token\", \"repo_id\", \"repo_name\", \"code\", \"msg\"], get_csv_data(\"./data/05seafile.csv\"))\n    def test_sea_file_1_5(token, repo_id, repo_name, code, msg):\n        response = sea_file_1_5(token, repo_id, repo_name)\n        a = eval(code)\n>       assert response.status_code == a\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_case\\test_07.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "828d4652e721bfe",
      "name" : "log",
      "source" : "828d4652e721bfe.txt",
      "type" : "text/plain",
      "size" : 353
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_07"
  }, {
    "name" : "host",
    "value" : "stu001243"
  }, {
    "name" : "thread",
    "value" : "17232-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_07"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "code",
    "value" : "'200'"
  }, {
    "name" : "msg",
    "value" : "'token'"
  }, {
    "name" : "repo_id",
    "value" : "'ef23029e-eec3-4f87-851a-db54e66b9770'"
  }, {
    "name" : "repo_name",
    "value" : "'1'"
  }, {
    "name" : "token",
    "value" : "'8ac00e05a7652b31598a56d764bd5b5f7c45a6e'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6eba317fcab12acc.json",
  "parameterValues" : [ "'200'", "'token'", "'ef23029e-eec3-4f87-851a-db54e66b9770'", "'1'", "'8ac00e05a7652b31598a56d764bd5b5f7c45a6e'" ]
}